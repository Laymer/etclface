
#
# etclface test suit.
#

package require etclface

set myname [info script]

set mynode	etclface1
set cookie	secretcookie
set myhost	localhost
set alivename	$mynode
set nodename	"${mynode}@${myhost}"
set myipaddr	127.0.0.1
set remotenode	"erlnode@localhost"
set timeout	5000


# error report for investigation by user
# args are as generated by catch
proc error_report {result options} {
	puts stderr "=== result ========"
	puts stderr $result
	puts stderr "=== Error Trace ==="
	puts stderr $options
	puts stderr "==================="
}


# init_1	etclface::init without args
proc init_1 {} {
	if [catch { set ec [etclface::init] } result] {
		if [string match {wrong # args:*} $result] { return }
		return -code error $result
	}
	return -code error {etclface::init with no args succeeded}
}

# init_2	etclface::init without cookie
proc init_2 {} {
	if [catch { set ec [etclface::init $::mynode] } result] {
		return -code error $result
	}
	if [string match "ec0x*" $ec] { return }
	return -code error $result
}

# init_3	etclface::init with cookie
proc init_3 {} {
	if [catch { set ec [etclface::init $::mynode $::cookie] } result] {
		return -code error $result
	}
	if [string match "ec0x*" $ec] { return }
	return -code error $result
}

# xinit_1	etclface::xinit without args
proc xinit_1 {} {
	if [catch { set ec [etclface::xinit] } result] {
		if [string match {wrong # args:*} $result] { return }
		return -code error $result
	}
	return -code error {etclface::xinit with no args succeeded}
}

# xinit_2	etclface::xinit without cookie
proc xinit_2 {} {
	if [catch { set ec [etclface::xinit $::myhost $::alivename $::nodename $::myipaddr] } result] {
		return -code error $result
	}
	if [string match "ec0x*" $ec] { return }
	return -code error $result
}

# xinit_3	etclface::xinit with cookie
proc xinit_3 {} {
	if [catch { set ec [etclface::xinit $::myhost $::alivename $::nodename $::myipaddr $::cookie] } result] {
		return -code error $result
	}
	if [string match "ec0x*" $ec] { return }
	return -code error $result
}

# connect_1	etclface::connect without arguments
proc connect_1 {} {
	if [catch { set fd [etclface::connect] } result] {
		if [string match {wrong # args:*} $result] { return }
		return -code error $result
	}
	return -code error {connect with no args succeeded}
}

# connect_2	etclface::connect with no timeout
proc connect_2 {} {
	if [catch {	set ec [etclface::init $::mynode $::cookie]
			set fd [etclface::connect $ec $::remotenode]
			} result] {
		return -code error $result
	}
	if [string is integer $fd] {
		etclface::disconnect $fd
		return
	}
	return -code error "etclface::connect did not return an integer ($fd)"
}

# connect_3	etclface::connect with timeout
proc connect_3 {} {
	if [catch {	set ec [etclface::init $::mynode $::cookie]
			set fd [etclface::connect $ec $::remotenode $::timeout]
			} result] {
		return -code error $result
	}
	if [string is integer $fd] {
		etclface::disconnect $fd
		return
	}
	return -code error "etclface::connect did not return an integer ($fd)"
}

# connect_4	etclface::connect with invalid timeout
proc connect_4 {} {
	if [catch {	set ec [etclface::init $::mynode $::cookie]
			set fd [etclface::connect $ec $::remotenode not_a_timeout]
			} result] {
		if [string match {expected integer but got *} $result] { return }
		return -code error $result
	}
	return -code error "etclface::connect with invalid timeout succeeded"
}


